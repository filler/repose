<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:html="http://www.w3.org/1999/xhtml"
           xmlns="http://docs.openrepose.org/repose/openstack-identity-v3/v1.0"
           targetNamespace="http://docs.openrepose.org/repose/openstack-identity-v3/v1.0"
           elementFormDefault="qualified">

    <!-- Elements -->
    <xs:element name="openstack-identity-v3" type="OpenstackIdentityV3Config"/>

    <!-- Types -->
    <xs:complexType name="OpenstackIdentityV3Config">
        <xs:annotation>
            <xs:documentation>
                <html:p>The root config type for the OpenStack Identity v3 filter configuration file.</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:all>
            <xs:element name="delegating" type="DelegatingType" minOccurs="0" maxOccurs="1"/>
            <xs:element name="white-list" type="WhiteList" minOccurs="0" maxOccurs="1"/>
            <xs:element name="openstack-identity-service" type="OpenstackIdentityService" minOccurs="1" maxOccurs="1"/>
            <xs:element name="service-endpoint" type="ServiceEndpoint" minOccurs="0" maxOccurs="1"/>
            <xs:element name="validate-project-id-in-uri" type="ValidateProjectID" minOccurs="0" maxOccurs="1"/>
            <xs:element name="roles-which-bypass-project-id-check" type="IgnoreProjectIDRoles" minOccurs="0"
                        maxOccurs="1"/>
        </xs:all>

        <xs:attribute name="send-all-project-ids" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        If set to false, a single X-Project-Id is sent.
                        If set to true, all project IDs returned by the Identity service are added as multiple
                        X-Project-Id headers.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="send-project-id-quality" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        If set to false, x-project-id headers are not sent with qualities.
                        If set to true, the default x-project-id will be given the highest quality, and qualities will
                        be attached to every x-project-id header.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="token-cache-timeout" type="ZeroOrPositiveInteger" use="optional" default="0">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Time in milliseconds to cache auth token.</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="groups-cache-timeout" type="ZeroOrPositiveInteger" use="optional" default="600000">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Time in milliseconds to cache auth groups.</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="cache-offset" type="ZeroOrPositiveInteger" use="optional" default="0">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Cache timeout offset (in milliseconds) for token and group cache. A random value
                        between -cache-offset and +cache-offset will be applied to the existing
                        token and group timeout values.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="forward-groups" type="xs:boolean" use="optional" default="true">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        Tells the filter whether or not to make a GET groups API call to the OpenStack Identity service
                        and populate the X-PP-Groups header with the result.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="forward-catalog" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        Tells the filter whether or not to forward the service catalog associated with a token in the
                        X-Catalog header. If forwarded, the service catalog will be base 64 encoded.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="WhiteList">
        <xs:annotation>
            <xs:documentation>
                <html:p>A list of URI patterns all users can access.</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="uri-pattern" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="OpenstackIdentityService">
        <xs:annotation>
            <xs:documentation>
                <html:p>Defines an Openstack Identity endpoint and access credentials.</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="username" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Admin username to access the OpenStack Identity service.</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="password" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Admin password to access the OpenStack Identity service.</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="uri" type="xs:anyURI" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Target URI for authentication requests.</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="project-id" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        The project ID of the admin defined by the username and password.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:simpleType name="ZeroOrPositiveInteger">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ServiceEndpoint">
        <xs:annotation>
            <xs:documentation>
                <html:p>Describes the service mapping for the Origin Service</html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="url" type="xs:anyURI" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>URL for the endpoint that matches the Origin Service</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="region" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Region for the endpoint that matches the Origin Service</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Name for the endpoint that matches the Origin Service</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="interface" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>
                    <html:p>Interface for the endpoint that matches the Origin Service</html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ValidateProjectID">
        <xs:annotation>
            <xs:documentation>
                <html:p>
                    If this element is present, the OpenStack Identity V3 filter will attempt to match the project ID
                    parsed from the URI against the set of project IDs in the token provided by the Identity service.
                </html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="regex" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        This attribute represents a regular expression which will be used to parse the project ID
                        out of the uri. A capture group should be present around the portion of the regex which matches
                        the project ID.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="IgnoreProjectIDRoles">
        <xs:annotation>
            <xs:documentation>
                <html:p>
                    A list of roles to bypass the project id check.
                    Users with any of the roles specified will not be required to have a project id.
                </html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="role" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DelegatingType">
        <xs:annotation>
            <xs:documentation>
                <html:p>
                    If present, the OpenStack Identity v3 filter will not send a failing response when authentication
                    fails.
                    Instead, it will add the data relating to the failure to a header and forward the
                    request to be handled by a different filter or service.
                    If not present, a validator will send a failing response when authentication fails.
                </html:p>
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="quality" type="QualityType" use="optional" default="0.7">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        The quality, a double between 0 and 1, assigned to the delegation header on delegation. This
                        value will be used to order delegation based on priority when multiple delegations are present.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:simpleType name="QualityType">
        <xs:restriction base="xs:double">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="1.0"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
