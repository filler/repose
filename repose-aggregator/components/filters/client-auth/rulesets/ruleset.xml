<ruleset xmlns="http://codenarc.org/ruleset/1.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://codenarc.org/ruleset/1.0 http://codenarc.org/ruleset-schema.xsd"
         xsi:noNamespaceSchemaLocation="http://codenarc.org/ruleset-schema.xsd">

    <description>Dummy rule set</description>

    <rule class='org.codenarc.rule.formatting.SpaceAfterIf'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterFor'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterWhile'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterSwitch'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterCatch'>
        <property name='priority' value='1'/>
    </rule>

    <!--rule class='org.codenarc.rule.formatting.SpaceAfterSynchronized?!?!?'>
        <property name='priority' value='1'/>
    </rule-->

    <rule class='org.codenarc.rule.formatting.SpaceAroundOperator'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceBeforeOpeningBrace'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterOpeningBrace'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceBeforeClosingBrace'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterComma'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.SpaceAfterSemiComma'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.BracesForClass'>
        <property sameLine='false'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.BracesForForLoop'>
        <property sameLine='false'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.BracesForIfElse'>
        <property sameLine='false'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.BracesForMethod'>
        <property sameLine='false'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.BracesForTryCatchFinally'>
        <property sameLine='false'/>
        <property name='priority' value='1'/>
    </rule>

    <!--rule class='org.codenarc.rule.formatting.SpaceAfterTypeCast?!?!?!?!?!?'>
        <property name='priority' value='1'/>
    </rule-->

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Require space before else, catch, or finally"/>
        <property name='regex' value='[^\s-]else|[^\s-]catch|[^\s-]finally'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Require space before and after a ?"/>
        <property name='regex' value='[^\s-]?|?[^\s-]'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Require space before and after a :"/>
        <property name='regex' value='[^\s-]:|:[^\s-]'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.basic.EmptyIfStatement'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Max 2 blank lines before }"/>
        <property name='regex' value='\n\n\n(\n)+.*\}'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.MissingBlankLineAfterPackage'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.formatting.MissingBlankLineAfterImports'>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Blanks around class"/>
        <property name='regex' value='class.*\{(.|\n|\s)*\}\n[^\s-]|[^\s-]\n.*def'/>
        <property name='priority' value='1'/>
    </rule>

    <rule class='org.codenarc.rule.generic.IllegalRegexRule'>
        <property name="name" value="Blanks around method"/>
        <property name='regex' value='def.*\{(.|\n|\s)*\}\n[^\s-]|[^\s-]\n.*def'/>
        <property name='priority' value='1'/>
    </rule>

</ruleset>